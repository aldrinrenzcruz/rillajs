function $(selector){return $select(document,selector)}Element.prototype.$=function(selector){return $select(this,selector)};function $select(context,selector){if(typeof selector!=="string"||!selector.trim()){console.error(`$: Invalid selector "${selector}"`);return null}if(!(context instanceof Element)&&context!==document){console.error(`$: Invalid context`,context);return null}let elements;try{elements=context.querySelectorAll(selector)}catch(error){console.error(`$: Invalid CSS selector "${selector}"`,error);return null}if(!elements.length){console.error(`$: ${selector} not found.`);return null}if(selector.startsWith("#")&&elements.length>1){console.warn(`$: (${elements.length}) ${selector} elements found.`);return elements[0]}return elements.length===1?elements[0]:elements}Element.prototype.html=function(content){if(content===undefined)return this.innerHTML;this.innerHTML=content;return this};Element.prototype.text=function(content){if(content===undefined)return this.textContent;this.textContent=content;return this};Element.prototype.val=function(value){if(value===undefined)return this.value;this.value=value;return this};Element.prototype.$attr=function(name,value){if(value===undefined)return this.getAttribute(name);this.setAttribute(name,value);return this};Element.prototype.addClass=function(classNames){if(typeof classNames!=="string"){console.error("addClass: Input must be a string");return this}const classes=classNames.trim().split(/\s+/).filter((cls=>cls));if(classes.length===0){console.warn("addClass: No valid classes provided");return this}try{this.classList.add(...classes)}catch(error){console.error("addClass: Error adding classes",error)}return this};Element.prototype.removeClass=function(classNames){if(typeof classNames!=="string"){console.error("removeClass: Input must be a string");return this}const classes=classNames.trim().split(/\s+/).filter((cls=>cls));if(classes.length===0){console.warn("removeClass: No valid classes provided");return this}try{this.classList.remove(...classes)}catch(error){console.error("removeClass: Error removing classes",error)}return this};Element.prototype.toggleClass=function(classNames){if(typeof classNames!=="string"){console.error("toggleClass: Input must be a string");return this}const classes=classNames.trim().split(/\s+/).filter((cls=>cls));if(classes.length===0){console.warn("toggleClass: No valid classes provided");return this}try{classes.forEach((cls=>this.classList.toggle(cls)))}catch(error){console.error("toggleClass: Error toggling classes",error)}return this};const $events=["click","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","keydown","keyup","keypress","input","change","submit","focus","blur","reset","touchstart","touchend","touchmove","touchcancel","scroll","resize","load","unload","beforeunload","dragstart","drag","dragenter","dragleave","dragover","drop","dragend","cut","copy","paste","play","pause","ended","volumechange","timeupdate","focusin","focusout","wheel","scroll","contextmenu","select"];$events.forEach((eventName=>{Element.prototype[`$${eventName}`]=function(callback,options={}){if(callback==null){console.error(`$${eventName}: Callback cannot be null or undefined`);return this}if(typeof callback==="string"){try{if(typeof window[callback]==="function"){callback=window[callback]}else{callback=new Function("event",callback)}}catch(error){console.error(`$${eventName}: Could not resolve function from string "${callback}"`,error);return this}}if(typeof callback!=="function"){console.error(`$${eventName}: Callback must be a function or a valid function string`);return this}const handler={element:this,callback:callback,eventName:eventName,options:{passive:options.passive??false,capture:options.capture??false,once:options.once??false},preventDefault:false,stopPropagation:false,listener:null,prevent:function(){this.preventDefault=true;return this},stop:function(){this.stopPropagation=true;return this},attach:function(){this.listener=event=>{try{if(this.preventDefault){event.preventDefault()}if(this.stopPropagation){event.stopPropagation()}const result=this.callback.call(this.element,event);if(result instanceof Promise){result.catch((error=>{console.error(`$${this.eventName}: Async callback error`,error)}))}return result}catch(error){console.error(`$${this.eventName}: Callback execution error`,error)}};this.element.addEventListener(this.eventName,this.listener,this.options);return this.element}};setTimeout((()=>handler.attach()),0);return handler};Element.prototype[`$remove${eventName.charAt(0).toUpperCase()+eventName.slice(1)}`]=function(callback){if(typeof callback==="function"){this.removeEventListener(eventName,callback)}return this}}));$events.forEach((eventName=>{Document.prototype[`$${eventName}`]=Element.prototype[`$${eventName}`];Document.prototype[`$remove${eventName.charAt(0).toUpperCase()+eventName.slice(1)}`]=Element.prototype[`$remove${eventName.charAt(0).toUpperCase()+eventName.slice(1)}`]}));$events.forEach((eventName=>{Window.prototype[`$${eventName}`]=Element.prototype[`$${eventName}`];Window.prototype[`$remove${eventName.charAt(0).toUpperCase()+eventName.slice(1)}`]=Element.prototype[`$remove${eventName.charAt(0).toUpperCase()+eventName.slice(1)}`]}));function $window(callback){window.addEventListener("load",callback)}function $dom(callback){document.addEventListener("DOMContentLoaded",callback)}const storage=(type,key,value)=>{const store=type==="local"?localStorage:sessionStorage;if(value===undefined)return JSON.parse(store.getItem(key));if(value===null)return store.removeItem(key);store.setItem(key,JSON.stringify(value))};const $local=(key,value)=>storage("local",key,value);const $session=(key,value)=>storage("session",key,value);function $getElement(param){return typeof param==="string"?document.querySelector(`#${param}`):param}HTMLElement.prototype.show=function(display_style="block"){show(this,display_style);return this};HTMLElement.prototype.hide=function(){hide(this);return this};HTMLElement.prototype.toggle=function(display_style="block"){toggle(this,display_style);return this};function show(param,display_style="block"){const element=$getElement(param);const display=display_style;if(element){element.style.opacity=0;element.style.display=display;requestAnimationFrame((function(){element.style.transition="opacity 200ms";element.style.opacity=1}));return element}else{console.warn("Element being shown not found or invalid parameter.");return null}}function hide(param){const element=$getElement(param);if(element){element.style.opacity=0;requestAnimationFrame((function(){element.style.transition="opacity 200ms";element.style.display="none"}));return element}else{console.warn("Element being hidden not found or invalid parameter.");return null}}function toggle(param,display_style="block"){const element=$getElement(param);const display=display_style;if(element){if(window.getComputedStyle(element).display==="none"){show(element,display)}else{hide(element)}return element}else{console.warn("Element being toggled not found or invalid parameter.");return null}}window={show:show,hide:hide,toggle:toggle,getElement:$getElement,get:function(id){const element=document.getElementById(id);return element}};function $initElDrag(){var pos1=0,pos2=0,pos3=0,pos4=0;var popups=document.querySelectorAll(".draggable");var elmnt=null;var currentZIndex=1;for(var i=0;i<popups.length;i++){var popup=popups[i];var header=$getHeader(popup);popup.onmousedown=function(){this.style.zIndex=""+ ++currentZIndex};if(header){header.parentPopup=popup;header.onmousedown=$dragMouseDown}}function $dragMouseDown(e){elmnt=this.parentPopup;elmnt.style.zIndex=""+ ++currentZIndex;e=e||window.event;pos3=e.clientX;pos4=e.clientY;document.onmouseup=$closeDragElement;document.onmousemove=$elementDrag}function $elementDrag(e){if(!elmnt){return}e=e||window.event;pos1=pos3-e.clientX;pos2=pos4-e.clientY;pos3=e.clientX;pos4=e.clientY;elmnt.style.top=elmnt.offsetTop-pos2+"px";elmnt.style.left=elmnt.offsetLeft-pos1+"px"}function $closeDragElement(){document.onmouseup=null;document.onmousemove=null}function $getHeader(element){var headerItems=element.querySelectorAll(".draggable-header");if(headerItems.length===1){return headerItems[0]}return null}}$initElDrag();(function(){const style=document.createElement("style");document.head.appendChild(style);const sheet=style.sheet;sheet.insertRule(".draggable { position: absolute; overflow: hidden; z-index: 1; }",sheet.cssRules.length);sheet.insertRule(".draggable-header { cursor: grab; z-index: 1; }",sheet.cssRules.length)})();
//# sourceMappingURL=rilla.min.js.map